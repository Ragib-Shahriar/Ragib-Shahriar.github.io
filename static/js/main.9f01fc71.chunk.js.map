{"version":3,"sources":["components/pages/skin-analysis/SkinAnalysis.module.css","components/pages/skin-analysis/Camera.module.css","components/basics/header/Header.module.css","components/basics/footer/Footer.module.css","components/basics/header/Header.js","components/pages/skin-analysis/Camera.js","components/pages/skin-analysis/SkinAnalysis.js","components/basics/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","styles","headerContainer","headerTitle","Camera","width","height","useState","camMode","setCamMode","videoRef","useRef","canvasRef","imgRef","useEffect","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err0r","console","log","style","autoPlay","videoElement","ref","src","img","takePicBtn","onClick","display","videoWidth","videoHeight","getContext","drawImage","toDataURL","sendForAnalysisBtn","SkinAnalysis","setWidth","setHeight","showVideo","setShowVideo","cameraContainerRef","camWidth","clientHeight","prevState","clientWidth","document","title","window","addEventListener","removeEventListener","container","cameraContainer","camera","openCameraBtn","Footer","footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f01fc71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SkinAnalysis_container__2Q7J4\",\"cameraContainer\":\"SkinAnalysis_cameraContainer__31G4o\",\"openCameraBtn\":\"SkinAnalysis_openCameraBtn__3KtYl\",\"headerTitle\":\"SkinAnalysis_headerTitle__2mSDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoElement\":\"Camera_videoElement__1-UOR\",\"img\":\"Camera_img__2G7FZ\",\"takePicBtn\":\"Camera_takePicBtn__3l2Cw\",\"sendForAnalysisBtn\":\"Camera_sendForAnalysisBtn__jMlKg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__anJZw\",\"headerTitle\":\"Header_headerTitle__2IClV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2QKBB\"};","import React from 'react'\r\nimport styles from './Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={styles.headerContainer}>\r\n            \r\n            <div className={styles.headerTitle}>\r\n                WELCOME TO GLAXODERMA SKIN ANALYSIS APP\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport styles from './Camera.module.css'\r\n\r\nfunction Camera({ width, height }) {\r\n\r\n    const [camMode, setCamMode] = useState(true)\r\n    const videoRef = useRef()\r\n    const canvasRef = useRef()\r\n    const imgRef = useRef()\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true })\r\n            .then(function (stream) {\r\n                videoRef.current.srcObject = stream;\r\n            })\r\n            .catch(function (err0r) {\r\n                console.log(\"Something went wrong!\");\r\n            });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log('wrking', width, height)\r\n        if (width < height) {\r\n            videoRef.current.style.width = width - 20 + 'px'\r\n            imgRef.current.style.width = width - 20 + 'px'\r\n        } else {\r\n            videoRef.current.style.width = height - 20 + 'px'\r\n            imgRef.current.style.width = height - 20 + 'px'\r\n        }\r\n\r\n    }, [width, height])\r\n\r\n    const takePicHandler = () => {\r\n        if(!camMode){\r\n            setCamMode(true)\r\n            imgRef.current.style.display = 'none'\r\n            videoRef.current.style.display = 'block'\r\n            return null\r\n        }\r\n        canvasRef.current.width = videoRef.current.videoWidth;\r\n        canvasRef.current.height = videoRef.current.videoHeight;\r\n        canvasRef.current.getContext(\"2d\").drawImage(videoRef.current, 0, 0);\r\n        // Other browsers will fall back to image/png\r\n        imgRef.current.style.display = 'block'\r\n        imgRef.current.src = canvasRef.current.toDataURL(\"image/webp\");\r\n        // canvasRef.current.getContext(\"2d\").drawImage('', 0, 0);\r\n        // setCanvasDisplay('none')\r\n        canvasRef.current.style.display = 'none'\r\n        videoRef.current.style.display = 'none'\r\n        setCamMode(false)\r\n        // videoRef.current.srcObject = null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <video autoPlay className={styles.videoElement} ref={videoRef}></video>\r\n            <img src=\"\" className={styles.img} ref={imgRef} />\r\n            <div>\r\n                <button className={styles.takePicBtn} onClick={takePicHandler}>\r\n                    {\r\n                        camMode ? 'Take Picture' : 'Retry'\r\n                    }\r\n                </button>\r\n                \r\n                    {\r\n                        camMode ? null : \r\n                        <button className={styles.sendForAnalysisBtn}>\r\n                            Send for analysis\r\n                        </button>\r\n                    }\r\n                \r\n            </div>\r\n\r\n            <canvas style={{ display: 'none' }} ref={canvasRef}></canvas>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Camera\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport styles from './SkinAnalysis.module.css'\r\nimport Camera from './Camera'\r\n\r\nfunction SkinAnalysis() {\r\n    const initialRatio = 0.6\r\n    const [width, setWidth] = useState(0)\r\n    const [height, setHeight] = useState(0)\r\n    const [ratio, setRatio] = useState(initialRatio)\r\n    const [showVideo, setShowVideo] = useState(false)\r\n    const cameraContainerRef = useRef()\r\n\r\n    const camWidth = () => {\r\n        console.log(cameraContainerRef.current.clientHeight)\r\n        setWidth(prevState=> cameraContainerRef.current.clientWidth)\r\n        setHeight(prevState=> cameraContainerRef.current.clientHeight)\r\n        // setHeight(prevState => parseInt(cameraContainerRef.current.style.height,10))\r\n        // cameraContainerRef.current.style.height = cameraContainerRef.current.clientWidth*ratio + 'px'\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = 'SKIN ANALYSIS'\r\n        setWidth(cameraContainerRef.current.clientWidth)\r\n        setHeight(prevState=> cameraContainerRef.current.clientHeight)\r\n        // setHeight(prevState => parseInt(cameraContainerRef.current.style.height,10))\r\n        // setHeigth(parseInt(cameraContainerRef.current.style.height,10))\r\n        // console.log(cameraContainerRef.current.style.height);\r\n        // cameraContainerRef.current.style.height = cameraContainerRef.current.clientWidth*ratio + 'px'\r\n        \r\n        window.addEventListener('resize', camWidth)\r\n        console.log(cameraContainerRef.current.clientWidth)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', camWidth)\r\n        }\r\n    }, [])\r\n\r\n    const cameraClickHandler = () => {\r\n        setShowVideo(prevState => true)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.cameraContainer} ref={cameraContainerRef}>\r\n                {\r\n                    showVideo? \r\n                    <Camera className={styles.camera} width = {width} height= {height}></Camera> :\r\n                    <>\r\n                        <button className={styles.openCameraBtn} onClick={cameraClickHandler}>\r\n                            Click Here To Open Camera\r\n                        </button>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkinAnalysis\r\n","import React from 'react'\r\nimport styles from './Footer.module.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className={styles.footer}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import './App.css';\nimport Header from './components/basics/header/Header';\nimport SkinAnalysis from './components/pages/skin-analysis/SkinAnalysis'\nimport Footer from './components/basics/footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <SkinAnalysis></SkinAnalysis>\n      <Footer></Footer>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}